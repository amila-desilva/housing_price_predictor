Week 2 Homework: Python 

Trainer: Tuan & Crayton 

Roadmap: 

Introduction to Python tools and virtual environments  

Introduction to Python  

Tools and Techniques  

PEP8 guidelines and writing clean, maintainable code  

Debugging  

Object Oriented Programming and Data Structures in Python  

Testing  

Unit tests  

Pytest framework  

Documentation (commenting conventions/ docstrings)  

RESTful API development  

HTTP Verbs   

REST constraints and RESTful APIs compare to JSON APIs  

API testing  

Code security  

Input validation/ Cryptography  

Storing passwords/secrets (using .env variables, GitHub secrets, shared secrets file locally listed in .gitignore)  

Vulnerability scanning tools  

Software/Accesses needed (Same as week 1):  

Visual Studio Code   

GitHub Desktop   

Git   

Python   

 

Homework 2 Details: 

Overview  

You will be required to develop a command-line application using the "Home Prices" dataset from Week 1. The application should be capable of reading and writing data from a file and utilize Object-Oriented Programming (OOP) techniques and data manipulation in Python to perform Create, Read, Update, and Delete (CRUD) operations.  

Features  

  

Step-by-Step Implementation  

Task 1: Project Setup and Basic Structure  

Use GitHub repository created in Week 1. Create a new branch for this week so that the name has the prefix of ‘Week2_YourInitial_’ and check out that branch. 

Initialize the project including necessary folders, files and confirm the Python is installed on the machine.  

Data file for download  

data.xlsx 

my-app/ 

├─ housing_price_predictor/ 

├─ src/ 

│  ├─ utils/	 

│  ├─ classes/ 

├─ tests/ 

Task 2: Reading and Writing Data  

Develop a function for reading the "Home Prices" dataset from a file. 

def  read_from_file(file_name: str) -> []: 

Implement a function to write data back to the file.  

def write_to_file(file_name:str, content: str) -> None: 

Task 3: Object-Oriented Programming  

Design and implement classes representing the dataset. Include methods to p-erform CRUD operations.  

Create the House class including a number of fields including id, neighborhood, house_style, overall_condition, year_built, roof_type, roof_material, foundation_material, heating, central_air, electrical, fireplace_num, garage_area, date_sold (MM/YYYY) 

Create a dictionary with key-value pairs from “id” to House instances 

Task 4: Data Manipulation  

Implement methods to filter, update, and delete specific records in the dataset.   

def update_house_by_id(self, house_id->int, updated_fields: {}) -> None or def updated_house(self, updated_data->{})-> None 

def delete_house_by_id(self, house_id) -> None 

def get_houses_by_filters(self, filters: []) -> [] 

Task 5: Add Test Cases   

Utilizing Pytest for writing unit test cases. 

Write at least one test for each of the created functions 

 

Resources Appendix: 

Pandas read_excel() - Reading Excel File in Python | DigitalOcean 
